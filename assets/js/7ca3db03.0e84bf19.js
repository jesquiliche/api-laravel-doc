"use strict";(self.webpackChunkapi_laravel_doc=self.webpackChunkapi_laravel_doc||[]).push([[373],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>g});var a=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,o=function(e,r){if(null==e)return{};var t,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=a.createContext({}),u=function(e){var r=a.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=u(e.components);return a.createElement(i.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var t=e.components,o=e.mdxType,n=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,g=p["".concat(i,".").concat(m)]||p[m]||d[m]||n;return t?a.createElement(g,s(s({ref:r},c),{},{components:t})):a.createElement(g,s({ref:r},c))}));function g(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var n=t.length,s=new Array(n);s[0]=m;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l[p]="string"==typeof e?e:o,s[1]=l;for(var u=2;u<n;u++)s[u]=t[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7322:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>u});var a=t(7462),o=(t(7294),t(3905));const n={sidebar_position:6},s="\ud83d\udcd6Rutas",l={unversionedId:"controladores/rutas",id:"controladores/rutas",title:"\ud83d\udcd6Rutas",description:"\xbfQu\xe9 es una ruta?",source:"@site/docs/controladores/rutas.md",sourceDirName:"controladores",slug:"/controladores/rutas",permalink:"/api-laravel-doc/docs/controladores/rutas",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/controladores/rutas.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcd6Controladores",permalink:"/api-laravel-doc/docs/controladores/"},next:{title:"Autenticaci\xf3n, seguridad y pruebas",permalink:"/api-laravel-doc/docs/category/autenticaci\xf3n-seguridad-y-pruebas"}},i={},u=[{value:"\xbfQu\xe9 es una ruta?",id:"qu\xe9-es-una-ruta",level:2},{value:"Creaci\xf3n de las rutas de nuestra API REST.",id:"creaci\xf3n-de-las-rutas-de-nuestra-api-rest",level:2}],c={toc:u},p="wrapper";function d(e){let{components:r,...t}=e;return(0,o.kt)(p,(0,a.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"rutas"},"\ud83d\udcd6Rutas"),(0,o.kt)("p",null,(0,o.kt)("img",{src:"/assets/images/rutas.jpeg",alt:"Descripci\xf3n de la imagen",className:"image-center"})),(0,o.kt)("h2",{id:"qu\xe9-es-una-ruta"},"\xbfQu\xe9 es una ruta?"),(0,o.kt)("p",null,'Las rutas en Laravel 9 son la manera de establecer URLs que se corresponden con las funciones espec\xedficas en su aplicaci\xf3n. Cada URL se asocia con un controlador y una acci\xf3n en ese controlador, que determina qu\xe9 se muestra al usuario cuando accede a la URL. Las rutas en Laravel 9 se definen en el archivo "routes/web.php" o "routes/api.php" y se pueden utilizar para establecer tanto rutas para vistas como para API REST. Adem\xe1s, tambi\xe9n es posible asignar rutas a grupos que compartan una serie de caracter\xedsticas comunes, como middleware, prefijos de URL o namespaces.'),(0,o.kt)("h2",{id:"creaci\xf3n-de-las-rutas-de-nuestra-api-rest"},"Creaci\xf3n de las rutas de nuestra API REST."),(0,o.kt)("p",null,"En el archivo api.php deber\xedamos tener el siguiente c\xf3digo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="routes\\api.php"',title:'"routes\\api.php"'},"<?php\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\AuthController;\n\n/*\n|--------------------------------------------------------------------------\n| API Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register API routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| is assigned the \"api\" middleware group. Enjoy building your API!\n|\n*/\n\nRoute::controller(AuthController::class)->group(function () {\n    Route::post('login', 'login');\n    Route::post('register', 'register');\n    Route::post('logout', 'logout');\n    Route::post('refresh', 'refresh');\n});\n\nRoute::apiResource('v1/categorias', App\\Http\\Controllers\\Api\\V1\\CategoriaController::class)->middleware('api');\nRoute::apiResource('v1/ivas', App\\Http\\Controllers\\Api\\V1\\IvaController::class);\nRoute::apiResource('v1/productos', App\\Http\\Controllers\\Api\\V1\\ProductoController::class);\nRoute::apiResource('v1/ofertas', App\\Http\\Controllers\\Api\\V1\\OfertaController::class);\nRoute::apiResource('v1/poblaciones', App\\Http\\Controllers\\Api\\V1\\PoblacionController::class);\nRoute::apiResource('v1/productos', App\\Http\\Controllers\\Api\\V1\\ProductoController::class);\nRoute::apiResource('v1/proveedores', App\\Http\\Controllers\\Api\\V1\\ProveedorController::class);\nRoute::apiResource('v1/provincias', App\\Http\\Controllers\\Api\\V1\\ProvinciaController::class);\nRoute::apiResource('v1/subcategorias',App\\Http\\Controllers\\Api\\V1\\SubcategoriaController::class);\nRoute::apiResource('v1/marcas', App\\Http\\Controllers\\Api\\V1\\MarcaController::class);\n")),(0,o.kt)("p",null,"Este c\xf3digo define rutas para una aplicaci\xf3n Laravel 9. Utiliza el m\xe9todo Route::controller() para crear un grupo de rutas que son manejadas por un controlador espec\xedfico (AuthController en este caso). Este controlador contiene m\xe9todos para iniciar sesi\xf3n, registrarse, cerrar sesi\xf3n y actualizar el token de autenticaci\xf3n."),(0,o.kt)("p",null,"El m\xe9todo ",(0,o.kt)("strong",{parentName:"p"},"Route::apiResource()")," se utiliza para definir rutas para los siguientes controladores: CategoriaController, IvaController, ProductoController, OfertaController, PoblacionController, ProveedorController, ProvinciaController, SubcategoriaController y MarcaController. Estas rutas se asignan a los siguientes recursos: categor\xedas, ivas, productos, ofertas, poblaciones, proveedores, provincias, subcategor\xedas y marcas. Todas estas rutas se aplican el middleware 'api', que es un grupo de middleware predefinido en Laravel que incluye la autenticaci\xf3n y la protecci\xf3n contra ataques CSRF."),(0,o.kt)("p",null,"En resumen, este c\xf3digo define un conjunto de rutas para una aplicaci\xf3n Laravel 9, que permiten a los usuarios interactuar con diferentes recursos a trav\xe9s de una API REST."))}d.isMDXComponent=!0}}]);